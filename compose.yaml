include:
  - compose/monitoring.yaml
  - compose/aux.yaml
services:
  zest-api:
    profiles: [ "server" ]
    container_name: zest-api
    build: .
    ports:
      - 8080:8080
    environment:
      - WITH_AUTH=true
      - DD_SERVICE=zest
      - DD_ENV=prod
      - DD_AGENT_HOST=dd-agent
      - DD_DOGSTATSD_URL=dd-agent:8125
    volumes:
      - type: bind
        source: ./secrets/
        target: /secrets/
      - type: bind
        source: .env
        target: /.env
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
  redis:
    profiles: [ "server" ]
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=zeke
      - POSTGRES_PASSWORD=reyna
      - POSTGRES_DB=zest
      - PGDATA=/var/lib/postgresql/data/_data
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U zeke" ]
      interval: 5s
      timeout: 5s
      retries: 5
  atlas:
    profiles: [ "dev" ]
    image: postgres
    container_name: atlasdevdb
    ports:
      - 5444:5432
    environment:
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=postgres

volumes:
  pgdata:
    driver: local # TODO(zeke): doing local for now, need a better way of pulling data from deployed instance
    driver_opts:
      type: none
      o: bind
      device: ./pgdata/workspace_pgdata
